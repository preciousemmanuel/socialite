[{"C:\\graphql\\client\\src\\index.js":"1","C:\\graphql\\client\\src\\App.js":"2","C:\\graphql\\client\\src\\pages\\Home.js":"3","C:\\graphql\\client\\src\\context\\authContext.js":"4","C:\\graphql\\client\\src\\components\\Nav.js":"5","C:\\graphql\\client\\src\\pages\\auth\\Register.js":"6","C:\\graphql\\client\\src\\pages\\auth\\Login.js":"7","C:\\graphql\\client\\src\\firebase.js":"8","C:\\graphql\\client\\src\\pages\\auth\\CompleteRegistration.js":"9","C:\\graphql\\client\\src\\components\\forms\\AuthForm.js":"10","C:\\graphql\\client\\src\\components\\PrivateRoute.js":"11","C:\\graphql\\client\\src\\pages\\auth\\PasswordReset.js":"12","C:\\graphql\\client\\src\\pages\\auth\\PasswordForgot.js":"13","C:\\graphql\\client\\src\\pages\\Profile.js":"14","C:\\graphql\\client\\src\\graphql\\mutations.js":"15","C:\\graphql\\client\\src\\graphql\\queries.js":"16","C:\\graphql\\client\\src\\graphql\\fragments.js":"17","C:\\graphql\\client\\src\\components\\forms\\UserProfile.js":"18","C:\\graphql\\client\\src\\components\\FileUploads.js":"19","C:\\graphql\\client\\src\\components\\LoadingToRedirect.js":"20","C:\\graphql\\client\\src\\pages\\User.js":"21","C:\\graphql\\client\\src\\components\\Image.js":"22","C:\\graphql\\client\\src\\components\\UserCard.js":"23"},{"size":670,"mtime":1610567676699,"results":"24","hashOfConfig":"25"},{"size":2280,"mtime":1614264146219,"results":"26","hashOfConfig":"25"},{"size":2044,"mtime":1611134721429,"results":"27","hashOfConfig":"25"},{"size":1481,"mtime":1610962849621,"results":"28","hashOfConfig":"25"},{"size":1968,"mtime":1614251803183,"results":"29","hashOfConfig":"25"},{"size":1400,"mtime":1611572606812,"results":"30","hashOfConfig":"25"},{"size":4037,"mtime":1611973227539,"results":"31","hashOfConfig":"25"},{"size":647,"mtime":1610535189816,"results":"32","hashOfConfig":"25"},{"size":2849,"mtime":1611572505864,"results":"33","hashOfConfig":"25"},{"size":1692,"mtime":1612238636794,"results":"34","hashOfConfig":"25"},{"size":3221,"mtime":1614160009234,"results":"35","hashOfConfig":"25"},{"size":1053,"mtime":1612239393635,"results":"36","hashOfConfig":"25"},{"size":1000,"mtime":1611973081972,"results":"37","hashOfConfig":"25"},{"size":2693,"mtime":1613991759620,"results":"38","hashOfConfig":"25"},{"size":242,"mtime":1612800310361,"results":"39","hashOfConfig":"25"},{"size":284,"mtime":1614251644053,"results":"40","hashOfConfig":"25"},{"size":336,"mtime":1613654429288,"results":"41","hashOfConfig":"25"},{"size":1362,"mtime":1613660778101,"results":"42","hashOfConfig":"25"},{"size":3060,"mtime":1614265283532,"results":"43","hashOfConfig":"25"},{"size":628,"mtime":1614115914760,"results":"44","hashOfConfig":"25"},{"size":1068,"mtime":1614266743481,"results":"45","hashOfConfig":"25"},{"size":234,"mtime":1614265245389,"results":"46","hashOfConfig":"25"},{"size":928,"mtime":1614266795017,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1p3gyvy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\graphql\\client\\src\\index.js",[],["104","105"],"C:\\graphql\\client\\src\\App.js",["106","107","108"],"C:\\graphql\\client\\src\\pages\\Home.js",["109","110"],"\r\nimport {gql, useLazyQuery, useQuery} from \"@apollo/client\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport React,{useContext, useState} from \"react\";\r\nimport Card from \"@material-ui/core/Card\"\r\nimport { Button, CardActions, CardContent, CardHeader, Container, Grid, Typography } from '@material-ui/core';\r\nimport {AuthContext} from '../context/authContext'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root:{\r\n    marginTop:20\r\n  }\r\n})\r\n\r\nconst GET_ALL_POSTS=gql`\r\n{\r\n    allPosts{\r\n        id\r\n        title\r\n        description\r\n    }\r\n}\r\n`\r\n\r\nconst Home=()=> {\r\n// const [posts,setPosts]=useState([]);\r\n\r\n// client\r\n// .query({\r\n//   query:gql`\r\n//   {\r\n//     allPosts{\r\n//       id\r\n//       title\r\n//       description\r\n//     }\r\n//   }\r\n//   `\r\n// })\r\n// .then(result=>setPosts(result.data.allPosts))\r\n// .catch(e=>console.log(e))\r\n// ;\r\nconst {data, loading,error}=useQuery(GET_ALL_POSTS);\r\nconst [fetchPosts,{data:postsData}]=useLazyQuery(GET_ALL_POSTS)\r\nconst {state,dispatch}=useContext(AuthContext)\r\nconst classes=useStyles();\r\n//react router\r\nlet history=useHistory();\r\n\r\n    if (loading) return <p>Loading...</p>\r\n\r\n  return (\r\n  <Container className={classes.root}>\r\n       <Button color=\"primary\" variant=\"contained\" onClick={()=>fetchPosts()}>Fetch Post</Button>\r\n    <Grid container spacing={3}>\r\n    {data && data.allPosts.map(post=>(\r\n     <Grid key={post.id} item xs={3}>\r\n       <Card>\r\n         <CardHeader\r\n         title={post.title}\r\n         />\r\n         <CardContent>\r\n    <Typography>{post.description}</Typography>\r\n         </CardContent>\r\n         <CardActions>\r\n            \r\n         </CardActions>\r\n       </Card>\r\n     </Grid>\r\n    )\r\n\r\n    )}\r\n\r\n    </Grid>\r\n    {JSON.stringify(postsData)}\r\n    {JSON.stringify(state)}\r\n    <hr/>\r\n    <Button color=\"primary\" variant=\"contained\" onClick={()=>dispatch({type:\"LOGGED_IN_USER\",payload:\"alan more\"})}>Fetch Post</Button>\r\n    {JSON.stringify(history)}\r\n </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\graphql\\client\\src\\context\\authContext.js",[],"C:\\graphql\\client\\src\\components\\Nav.js",[],"C:\\graphql\\client\\src\\pages\\auth\\Register.js",["111","112","113","114","115","116","117","118","119"],"import { Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextField } from '@material-ui/core';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport AuthForm from '../../components/forms/AuthForm';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 50\r\n    }\r\n})\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"emmaprechi@gmail.com\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    \r\n\r\n    const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const config={\r\n            url:process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n            handleCodeInApp:true\r\n        }\r\n        await auth.sendSignInLinkToEmail(email,config);\r\n        //show toast notification to user about email sent\r\n        toast.success(`Email is sent to ${email}. Click link to complete registration.`)\r\n\r\n        //save user email to localstorage\r\n        window.localStorage.setItem(\"emailForRegistration\",email);\r\n\r\n        //clear state\r\n        setEmail(\"\");\r\n        setLoading(false);\r\n    }\r\n    return (\r\n      <AuthForm header=\"Register\" email={email}  loading={loading} setEmail={setEmail} handleSubmit={handleSubmit} />\r\n       \r\n        )\r\n}\r\n\r\nexport default Register;","C:\\graphql\\client\\src\\pages\\auth\\Login.js",["120"],"import React, { useState ,useEffect, useContext} from 'react';\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextField } from '@material-ui/core';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 50\r\n    }\r\n})\r\n\r\nconst USER_CREATE=gql`\r\n    mutation userCreate{\r\n        userCreate{\r\n            username\r\n            email\r\n        }\r\n    }\r\n    `\r\n\r\nconst Login = () => {\r\n    const {dispatch}=useContext(AuthContext)\r\n    const [email,setEmail]=useState(\"emmaprechi@gmail.com\");\r\n    const [password,setPassword]=useState(\"123456\");\r\n    const [loading,setLoading]=useState(false);\r\n    const classes = useStyles();\r\n\r\n    let history=useHistory();\r\n\r\n    const [userCreate]=useMutation(USER_CREATE)\r\n\r\n    const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        //validation\r\n        if(!email || !password){\r\n            toast.error(\"Email and password is required.\")\r\n            return;\r\n        }\r\n        try {\r\n\r\n           await auth.signInWithEmailAndPassword(email,password)\r\n            .then(async result=>{\r\n                const {user}=result;\r\n                const idTokenResult=await user.getIdTokenResult();\r\n                dispatch({\r\n                    type:\"LOGGED_IN_USER\",\r\n                    payload:{email:user.email,token:idTokenResult.token}\r\n                });\r\n\r\n                //make api request to save user in mongodb\r\n                userCreate();\r\n\r\n                history.push(\"/\")\r\n\r\n            })\r\n          \r\n        } catch (error) {\r\n            console.log(\"Error registring...\",error.message)\r\n            setLoading(false);\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const loginWithGoogle=()=>{\r\n        auth.signInWithPopup(googleAuthProvider)\r\n        .then(async result=>{\r\n            const {user}=result;\r\n            const idTokenResult=await user.getIdTokenResult();\r\n            dispatch({\r\n                type:\"LOGGED_IN_USER\",\r\n                payload:{email:user.email,token:idTokenResult.token}\r\n            });\r\n\r\n            //make api request to save user in mongodb\r\n            userCreate();\r\n            history.push(\"/\")\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n            setLoading(false);\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Container>\r\n                <Card>\r\n\r\n                    <CardHeader title={loading ? \"Loading...\" : \"Login\"} />\r\n                    <CardContent>\r\n                        <Grid container>\r\n                            <Grid item xs={7}>\r\n                                <Button variant=\"contained\" color=\"danger\" onClick={loginWithGoogle}>Login with Google</Button>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <TextField onChange={(e) => setEmail(e.target.value)} style={{ marginBottom: 8 }} fullWidth value={email} disabled={loading} type=\"email\" label=\"Email Address\" />\r\n                                    <TextField onChange={(e) => setPassword(e.target.value)} style={{ marginBottom: 8 }} fullWidth value={password} disabled={loading} type=\"password\" label=\"Password\" />\r\n                                    \r\n                                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!email || !password|| loading}>Submit</Button>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n<Link to=\"/password/forgot\">Forgot Password?</Link>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\graphql\\client\\src\\firebase.js",[],"C:\\graphql\\client\\src\\pages\\auth\\CompleteRegistration.js",["121","122","123","124","125","126","127","128","129"],"import React, { useState ,useEffect, useContext} from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextField } from '@material-ui/core';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport AuthForm from '../../components/forms/AuthForm';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 50\r\n    }\r\n});\r\n\r\nconst USER_CREATE=gql`\r\nmutation userCreate{\r\n    userCreate{\r\n        username\r\n        email\r\n    }\r\n}\r\n`\r\n\r\nconst CompleteRegistration = () => {\r\n    const {dispatch}=useContext(AuthContext)\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [loading,setLoading]=useState(false);\r\n    const classes = useStyles();\r\n\r\n    let history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        //this runs when component mount by default like componentdidmount, and when there is a change in history or route changes\r\n        console.log(\"render\");\r\n        setEmail(window.localStorage.getItem(\"emailForRegistration\"))\r\n    },[history])\r\n\r\n    const [userCreate]=useMutation(USER_CREATE);\r\n\r\n    const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        //validation\r\n        if(!email || !password){\r\n            toast.error(\"Email and password is required.\")\r\n            return;\r\n        }\r\n        try {\r\n\r\n            const result= await auth.signInWithEmailLink(email,window.location.href);\r\n            //console.log(result);\r\n            if(result.user.emailVerified){\r\n                window.localStorage.removeItem(\"emailForRegistration\");\r\n\r\n                //get current login user\r\n                let user=auth.currentUser;\r\n                //udate password.\r\n                await user.updatePassword(password);\r\n                //dispatch user with email and token\r\n                //then redirect\r\n                const idTokenResult=await user.getIdTokenResult();\r\n                dispatch({\r\n                    type:\"LOGGED_IN_USER\",\r\n                    payload:{email:user.email,token:idTokenResult.token}\r\n                });\r\n\r\n                //make api request to save user in mongodb\r\n                userCreate();\r\n                history.push(\"/\")\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Error registring...\",error.message)\r\n            setLoading(false);\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthForm email={email} header=\"Confirm Account\"  loading={loading} password={password} showPassword={true} setEmail={setEmail} handleSubmit={handleSubmit} />\r\n        )\r\n}\r\n\r\nexport default CompleteRegistration;","C:\\graphql\\client\\src\\components\\forms\\AuthForm.js",[],"C:\\graphql\\client\\src\\components\\PrivateRoute.js",["130"],"import React,{useState,useEffect, useContext} from 'react';\r\nimport {Route,Link} from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Divider, Drawer, Hidden, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport LoadingToRedirect from './LoadingToRedirect';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    marginLeft:300,\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst PrivateRoute=({children,...rest})=>{\r\n  console.log(children)\r\n    const classes=useStyles()\r\nconst [user,setUser]=useState(false);\r\n\r\nconst {state}=useContext(AuthContext);\r\n\r\nuseEffect(()=>{ \r\n    //whenever state.user changes the useeffect fires\r\n    if(state.user){\r\n        setUser(true)\r\n    }\r\n},[state.user])\r\n\r\nconst drawer=(\r\n    <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider/>\r\n        <List>\r\n            <ListItem button component={Link} to=\"/profile\">\r\n                <ListItemIcon>\r\n                <InboxIcon />\r\n                <ListItemText primary=\"Profile\" />\r\n                </ListItemIcon>\r\n            </ListItem>\r\n            <ListItem button component={Link} to=\"/password/reset\">\r\n                <ListItemIcon>\r\n                <InboxIcon />\r\n                <ListItemText primary=\"Password Reset\" />\r\n                </ListItemIcon>\r\n            </ListItem>\r\n            <ListItem button component={Link} to=\"/\">\r\n                <ListItemIcon>\r\n                <InboxIcon />\r\n                <ListItemText primary=\"Post\" />\r\n                </ListItemIcon>\r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n)\r\nconst container = window !== undefined ? () => window().document.body : undefined;\r\nconst renderContent=()=>(\r\n<div>\r\n    <nav className={classes.drawer}>\r\n    <Hidden smUp implementation=\"css\">\r\n        <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        classes={{paper:classes.drawerPaper}}\r\n        >\r\n            {drawer}\r\n        </Drawer>\r\n    </Hidden>\r\n    <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n    </nav>\r\n    <main className={classes.content}>\r\n            <Route {...rest}/>\r\n    </main>\r\n</div>\r\n\r\n)\r\n\r\nreturn user ? renderContent():<LoadingToRedirect path=\"/login\"/>\r\n\r\n}\r\n\r\nexport default PrivateRoute;","C:\\graphql\\client\\src\\pages\\auth\\PasswordReset.js",["131"],"import React,{useState} from \"react\"\r\nimport { toast } from \"react-toastify\";\r\nimport AuthForm from \"../../components/forms/AuthForm\";\r\nimport { auth } from \"../../firebase\";\r\n\r\nconst PasswordReset=()=>{\r\n const [password,setPassword]=useState('')\r\n const [loading,setLoading]=useState(false)\r\nconst handleSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    const config={\r\n        url:process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n        handleCodeInApp:true\r\n    }\r\n    setLoading(true)\r\n\r\n    await auth.currentUser.updatePassword(password)\r\n    .then(()=>{\r\n        setPassword('');\r\n        setLoading(false);\r\n        toast.success(`password is updated `)\r\n    })\r\n    .catch(error=>{\r\n        setLoading(false);\r\n        console.log(error);\r\n        toast.error(error.message)\r\n    })\r\n}\r\n\r\n    return (\r\n        <AuthForm showPassword={true} hideEmail={true} handleSubmit={handleSubmit} password={password} loading={loading} setPassword={setPassword} setLoading={setLoading} header=\"Update Password\"/>\r\n    )\r\n}\r\n\r\nexport default PasswordReset;","C:\\graphql\\client\\src\\pages\\auth\\PasswordForgot.js",[],"C:\\graphql\\client\\src\\pages\\Profile.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import { React, useMemo, useState,useContext } from \"react\";\r\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\r\nimport { Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextareaAutosize, TextField } from '@material-ui/core';\r\nimport { toast } from \"react-toastify\";\r\nimport omitDeep from \"omit-deep\";\r\nimport { PROFILE } from \"../graphql/queries\";\r\nimport { UPDATE } from \"../graphql/mutations\";\r\nimport FileResizer from \"react-image-file-resizer\";\r\nimport axios from 'axios';\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport UserProfile from \"../components/forms/UserProfile\";\r\nimport FileUploads from \"../components/FileUploads\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const {state}=useContext(AuthContext);\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        name: '',\r\n        about: '',\r\n        username: '',\r\n        images: []\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n    const { data } = useQuery(PROFILE);\r\n    useMemo(() => {\r\n        if (data) {\r\n            console.log(\"ssss\",data)\r\n            setValues({\r\n\r\n                ...values,\r\n                email: data.profile.email,\r\n                name: data.profile.name,\r\n                about: data.profile.about,\r\n                username: data.profile.username,\r\n                images: data.profile.images.map((datum) => {\r\n                    return {\r\n                        'url': datum.url,\r\n                        'public_id': datum.public_id,\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [data])\r\n\r\n    const { name, username, email, about, images } = values;\r\n\r\n    const [userUpdate] = useMutation(UPDATE, {\r\n        update: ({ data }) => {\r\n            console.log(\"USER UPDATE MUTATION\", data);\r\n            toast.success(\"Profile updated\");\r\n        }\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setValues({\r\n            ...values, [e.target.name]: e.target.value\r\n        });\r\n\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        console.log(values)\r\n\r\n        setLoading(true);\r\n        userUpdate({ variables: { input: values } });\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n    // const profilupdateForm = () => (\r\n\r\n       \r\n    // )\r\n\r\n    return (\r\n        <div>\r\n            <h4>{loading?\"Loading...\":\"Profile\"}</h4>\r\n            \r\n           \r\n                <FileUploads setLoading={setLoading} loading={loading} setValues={setValues} values={values} />\r\n                \r\n            <UserProfile {...values} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\graphql\\client\\src\\graphql\\mutations.js",[],"C:\\graphql\\client\\src\\graphql\\queries.js",[],"C:\\graphql\\client\\src\\graphql\\fragments.js",[],"C:\\graphql\\client\\src\\components\\forms\\UserProfile.js",["152","153","154","155","156"],"import React from 'react';\r\nimport { Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextareaAutosize, TextField } from '@material-ui/core';\r\n\r\nconst UserProfile=({handleChange,handleSubmit,username,email,about,loading,name})=>{\r\n\r\n    return(\r\n        <CardContent>\r\n        <Grid container>\r\n            <Grid item xs={7}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField onChange={handleChange} style={{ marginBottom: 8 }} fullWidth value={email} name=\"email\" disabled={loading} type=\"email\" label=\"Email Address\" />\r\n                    <TextField onChange={handleChange} style={{ marginBottom: 8 }} fullWidth value={name} disabled={loading} type=\"text\" name=\"name\" label=\"Name\" />\r\n                    <TextField onChange={handleChange} style={{ marginBottom: 8 }} fullWidth value={username} disabled={loading} type=\"text\" name=\"username\" label=\"Username\" />\r\n                   \r\n                    <TextField onChange={handleChange} style={{ marginBottom: 8 }} fullWidth value={about} disabled={loading} type=\"textarea\" name=\"about\" label=\"About\" />\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!email || loading}>Submit</Button>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </CardContent>\r\n\r\n    )\r\n}\r\n\r\nexport default UserProfile;","C:\\graphql\\client\\src\\components\\FileUploads.js",["157","158","159","160","161","162","163","164","165"],"C:\\graphql\\client\\src\\components\\LoadingToRedirect.js",["166"],"import React, { useEffect,useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoadingToRedirect=({path})=>{\r\n    let history=useHistory();\r\n    const [count,setCount]=useState(5);\r\n\r\n    useEffect(()=>{\r\n        const interval=setInterval(()=>{\r\n            setCount(currentCount=>--currentCount);\r\n        },1000)\r\n        //redirect \r\n        count===0 && history.push(path)\r\n        //cleaup\r\n        return ()=>clearInterval(interval)\r\n    },[count])\r\n\r\n    return(\r\n        <div>\r\n            <p>Redirection in {count} seconds</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect;","C:\\graphql\\client\\src\\pages\\User.js",["167","168","169","170","171","172","173","174","175","176","177","178","179"],"C:\\graphql\\client\\src\\components\\Image.js",["180"],"C:\\graphql\\client\\src\\components\\UserCard.js",["181","182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":37,"nodeType":"189","messageId":"190","endLine":2,"endColumn":40},{"ruleId":"187","severity":1,"message":"191","line":5,"column":15,"nodeType":"189","messageId":"190","endLine":5,"endColumn":23},{"ruleId":"187","severity":1,"message":"192","line":45,"column":9,"nodeType":"189","messageId":"190","endLine":45,"endColumn":18},{"ruleId":"187","severity":1,"message":"191","line":4,"column":27,"nodeType":"189","messageId":"190","endLine":4,"endColumn":35},{"ruleId":"187","severity":1,"message":"193","line":46,"column":22,"nodeType":"189","messageId":"190","endLine":46,"endColumn":27},{"ruleId":"187","severity":1,"message":"194","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":16},{"ruleId":"187","severity":1,"message":"195","line":1,"column":18,"nodeType":"189","messageId":"190","endLine":1,"endColumn":22},{"ruleId":"187","severity":1,"message":"196","line":1,"column":24,"nodeType":"189","messageId":"190","endLine":1,"endColumn":35},{"ruleId":"187","severity":1,"message":"197","line":1,"column":37,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"187","severity":1,"message":"198","line":1,"column":49,"nodeType":"189","messageId":"190","endLine":1,"endColumn":58},{"ruleId":"187","severity":1,"message":"199","line":1,"column":60,"nodeType":"189","messageId":"190","endLine":1,"endColumn":64},{"ruleId":"187","severity":1,"message":"200","line":1,"column":78,"nodeType":"189","messageId":"190","endLine":1,"endColumn":87},{"ruleId":"187","severity":1,"message":"201","line":3,"column":17,"nodeType":"189","messageId":"190","endLine":3,"endColumn":26},{"ruleId":"187","severity":1,"message":"202","line":17,"column":11,"nodeType":"189","messageId":"190","endLine":17,"endColumn":18},{"ruleId":"187","severity":1,"message":"201","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"194","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"195","line":5,"column":18,"nodeType":"189","messageId":"190","endLine":5,"endColumn":22},{"ruleId":"187","severity":1,"message":"196","line":5,"column":24,"nodeType":"189","messageId":"190","endLine":5,"endColumn":35},{"ruleId":"187","severity":1,"message":"197","line":5,"column":37,"nodeType":"189","messageId":"190","endLine":5,"endColumn":47},{"ruleId":"187","severity":1,"message":"198","line":5,"column":49,"nodeType":"189","messageId":"190","endLine":5,"endColumn":58},{"ruleId":"187","severity":1,"message":"199","line":5,"column":60,"nodeType":"189","messageId":"190","endLine":5,"endColumn":64},{"ruleId":"187","severity":1,"message":"200","line":5,"column":78,"nodeType":"189","messageId":"190","endLine":5,"endColumn":87},{"ruleId":"187","severity":1,"message":"203","line":28,"column":21,"nodeType":"189","messageId":"190","endLine":28,"endColumn":32},{"ruleId":"187","severity":1,"message":"202","line":30,"column":11,"nodeType":"189","messageId":"190","endLine":30,"endColumn":18},{"ruleId":"187","severity":1,"message":"204","line":4,"column":22,"nodeType":"189","messageId":"190","endLine":4,"endColumn":30},{"ruleId":"187","severity":1,"message":"205","line":11,"column":11,"nodeType":"189","messageId":"190","endLine":11,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":2,"column":33,"nodeType":"189","messageId":"190","endLine":2,"endColumn":36},{"ruleId":"187","severity":1,"message":"194","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":16},{"ruleId":"187","severity":1,"message":"195","line":3,"column":18,"nodeType":"189","messageId":"190","endLine":3,"endColumn":22},{"ruleId":"187","severity":1,"message":"196","line":3,"column":24,"nodeType":"189","messageId":"190","endLine":3,"endColumn":35},{"ruleId":"187","severity":1,"message":"197","line":3,"column":37,"nodeType":"189","messageId":"190","endLine":3,"endColumn":47},{"ruleId":"187","severity":1,"message":"198","line":3,"column":49,"nodeType":"189","messageId":"190","endLine":3,"endColumn":58},{"ruleId":"187","severity":1,"message":"199","line":3,"column":60,"nodeType":"189","messageId":"190","endLine":3,"endColumn":64},{"ruleId":"187","severity":1,"message":"206","line":3,"column":66,"nodeType":"189","messageId":"190","endLine":3,"endColumn":76},{"ruleId":"187","severity":1,"message":"207","line":3,"column":78,"nodeType":"189","messageId":"190","endLine":3,"endColumn":94},{"ruleId":"187","severity":1,"message":"200","line":3,"column":96,"nodeType":"189","messageId":"190","endLine":3,"endColumn":105},{"ruleId":"187","severity":1,"message":"208","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"209","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":19},{"ruleId":"187","severity":1,"message":"210","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":13},{"ruleId":"187","severity":1,"message":"211","line":22,"column":12,"nodeType":"189","messageId":"190","endLine":22,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":50,"column":8,"nodeType":"214","endLine":50,"endColumn":14,"suggestions":"215"},{"ruleId":"187","severity":1,"message":"216","line":52,"column":13,"nodeType":"189","messageId":"190","endLine":52,"endColumn":17},{"ruleId":"187","severity":1,"message":"217","line":52,"column":19,"nodeType":"189","messageId":"190","endLine":52,"endColumn":27},{"ruleId":"187","severity":1,"message":"218","line":52,"column":29,"nodeType":"189","messageId":"190","endLine":52,"endColumn":34},{"ruleId":"187","severity":1,"message":"219","line":52,"column":36,"nodeType":"189","messageId":"190","endLine":52,"endColumn":41},{"ruleId":"187","severity":1,"message":"220","line":52,"column":43,"nodeType":"189","messageId":"190","endLine":52,"endColumn":49},{"ruleId":"187","severity":1,"message":"195","line":2,"column":18,"nodeType":"189","messageId":"190","endLine":2,"endColumn":22},{"ruleId":"187","severity":1,"message":"197","line":2,"column":37,"nodeType":"189","messageId":"190","endLine":2,"endColumn":47},{"ruleId":"187","severity":1,"message":"198","line":2,"column":49,"nodeType":"189","messageId":"190","endLine":2,"endColumn":58},{"ruleId":"187","severity":1,"message":"206","line":2,"column":66,"nodeType":"189","messageId":"190","endLine":2,"endColumn":76},{"ruleId":"187","severity":1,"message":"207","line":2,"column":78,"nodeType":"189","messageId":"190","endLine":2,"endColumn":94},{"ruleId":"187","severity":1,"message":"221","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":24},{"ruleId":"187","severity":1,"message":"191","line":1,"column":26,"nodeType":"189","messageId":"190","endLine":1,"endColumn":34},{"ruleId":"187","severity":1,"message":"194","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":16},{"ruleId":"187","severity":1,"message":"195","line":4,"column":18,"nodeType":"189","messageId":"190","endLine":4,"endColumn":22},{"ruleId":"187","severity":1,"message":"196","line":4,"column":24,"nodeType":"189","messageId":"190","endLine":4,"endColumn":35},{"ruleId":"187","severity":1,"message":"197","line":4,"column":37,"nodeType":"189","messageId":"190","endLine":4,"endColumn":47},{"ruleId":"187","severity":1,"message":"198","line":4,"column":49,"nodeType":"189","messageId":"190","endLine":4,"endColumn":58},{"ruleId":"187","severity":1,"message":"206","line":4,"column":66,"nodeType":"189","messageId":"190","endLine":4,"endColumn":76},{"ruleId":"187","severity":1,"message":"207","line":4,"column":78,"nodeType":"189","messageId":"190","endLine":4,"endColumn":94},{"ruleId":"212","severity":1,"message":"222","line":16,"column":7,"nodeType":"214","endLine":16,"endColumn":14,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":9,"nodeType":"189","messageId":"190","endLine":2,"endColumn":12},{"ruleId":"187","severity":1,"message":"224","line":2,"column":14,"nodeType":"189","messageId":"190","endLine":2,"endColumn":26},{"ruleId":"187","severity":1,"message":"225","line":4,"column":15,"nodeType":"189","messageId":"190","endLine":4,"endColumn":25},{"ruleId":"187","severity":1,"message":"201","line":4,"column":27,"nodeType":"189","messageId":"190","endLine":4,"endColumn":36},{"ruleId":"187","severity":1,"message":"191","line":4,"column":38,"nodeType":"189","messageId":"190","endLine":4,"endColumn":46},{"ruleId":"187","severity":1,"message":"195","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":12},{"ruleId":"187","severity":1,"message":"194","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":16},{"ruleId":"187","severity":1,"message":"226","line":6,"column":18,"nodeType":"189","messageId":"190","endLine":6,"endColumn":29},{"ruleId":"187","severity":1,"message":"196","line":6,"column":31,"nodeType":"189","messageId":"190","endLine":6,"endColumn":42},{"ruleId":"187","severity":1,"message":"197","line":6,"column":44,"nodeType":"189","messageId":"190","endLine":6,"endColumn":54},{"ruleId":"187","severity":1,"message":"227","line":6,"column":73,"nodeType":"189","messageId":"190","endLine":6,"endColumn":83},{"ruleId":"187","severity":1,"message":"228","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":20},{"ruleId":"187","severity":1,"message":"193","line":25,"column":22,"nodeType":"189","messageId":"190","endLine":25,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":6,"column":5,"nodeType":"231","endLine":6,"endColumn":124},{"ruleId":"187","severity":1,"message":"226","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":19},{"ruleId":"187","severity":1,"message":"194","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":14},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'uriOption' is assigned a value but never used.","'error' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'useTheme' is defined but never used.","'config' is assigned a value but never used.","'makeStyles' is defined but never used.","'TextareaAutosize' is defined but never used.","'omitDeep' is defined but never used.","'FileResizer' is defined but never used.","'axios' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["234"],"'name' is assigned a value but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","'about' is assigned a value but never used.","'images' is assigned a value but never used.","'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'path'. Either include them or remove the dependency array.",["235"],"'useLazyQuery' is defined but never used.","'useContext' is defined but never used.","'CardActions' is defined but never used.","'Typography' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [data, values]",{"range":"240","text":"241"},"Update the dependencies array to be: [count, history, path]",{"range":"242","text":"243"},[1592,1598],"[data, values]",[476,483],"[count, history, path]"]